# golden/сache_test.yml
# Демонстрируем влияние кэш-памяти на производительность
# Тест основан на фундаментальном принципе работы кешей — принципе временной локальности,
# который гласит: если процессор обратился к ячейке памяти, то велика вероятность,
# что в ближайшем будущем он обратится к ней снова.
# Холодный кеш - в кеше нет нужных данных, поэтому процессор обращается к основной памяти.
# Теплый кеш - данные уже в кеше, поэтому процессор обращается к кешу.
# -- Входные данные --
in_source: |2-

  : CR 10 EMIT ;
  : DIGIT>CHAR 48 + ;
  : U.SIMPLE
      DUP 10 < IF
          DIGIT>CHAR EMIT
      ELSE
          10 /MOD SWAP U.SIMPLE DIGIT>CHAR EMIT
      THEN ;


  VARIABLE I_VAR
  VARIABLE SUM_VAR
  VARIABLE ARRAY-SIZE-VAR

  \ Создаем массив в 2 раза больше размера кеша
  CREATE BIG-ARRAY ALLOT 64


  : FILL-ARRAY
      0 I_VAR !
      BEGIN
          I_VAR @ ARRAY-SIZE-VAR @ <
      WHILE
          I_VAR @ 1+
          BIG-ARRAY I_VAR @ + !
          I_VAR @ 1+ I_VAR !
      REPEAT
  ;

  : SUM-ARRAY
      0 SUM_VAR !
      0 I_VAR !
      BEGIN
          I_VAR @ ARRAY-SIZE-VAR @ <
      WHILE
          SUM_VAR @ BIG-ARRAY I_VAR @ + @ +
          SUM_VAR !
          I_VAR @ 1+ I_VAR !
      REPEAT
  ;

  \ Устанавливаем размер массива в переменную
  64 ARRAY-SIZE-VAR !

  FILL-ARRAY

  SUM-ARRAY
  S" Sum (Cold Cache): " TYPE SUM_VAR @ U.SIMPLE CR
  SUM-ARRAY
  S" Sum (Warm Cache): " TYPE SUM_VAR @ U.SIMPLE CR

  HALT

in_stdin: ''
in_cache_size: 32
# -- Эталонные выходные данные --
out_code: 
  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
out_code_hex: |
  ; Source: <source_path>
  ; Code section (size: 1208 bytes)
  0x0000: C800010F  JMP   0x000010F
  0x0001: C4030000  POP   R3
  0x0002: 94040000  LUI   R4, 0x0000
  0x0003: 9884FF01  ORI   R4, R4, 65281
  0x0004: 88830000  STORE R3, 0(R4)
  0x0005: D0000000  RET
  0x0006: 94040000  LUI   R4, 0x0000
  0x0007: 9884FF00  ORI   R4, R4, 65280
  0x0008: 84830000  LOAD  R3, 0(R4)
  0x0009: C0600000  PUSH  R3
  0x000A: D0000000  RET
  0x000B: C4030000  POP   R3
  0x000C: C0600000  PUSH  R3
  0x000D: C0600000  PUSH  R3
  0x000E: D0000000  RET
  0x000F: C4030000  POP   R3
  0x0010: C4040000  POP   R4
  0x0011: C0600000  PUSH  R3
  0x0012: C0800000  PUSH  R4
  0x0013: D0000000  RET
  0x0014: C4050000  POP   R5
  0x0015: C4040000  POP   R4
  0x0016: C4030000  POP   R3
  0x0017: C0800000  PUSH  R4
  0x0018: C0A00000  PUSH  R5
  0x0019: C0600000  PUSH  R3
  0x001A: D0000000  RET
  0x001B: C4030000  POP   R3
  0x001C: D0000000  RET
  0x001D: C4040000  POP   R4
  0x001E: C4030000  POP   R3
  0x001F: 60641800  CMP   R3, R3, R4
  0x0020: C0600000  PUSH  R3
  0x0021: D0000000  RET
  0x0022: C4030000  POP   R3
  0x0023: 80630001  ADDI  R3, R3, 1
  0x0024: C0600000  PUSH  R3
  0x0025: D0000000  RET
  0x0026: C4030000  POP   R3
  0x0027: C4040000  POP   R4
  0x0028: C0800000  PUSH  R4
  0x0029: C0600000  PUSH  R3
  0x002A: C0800000  PUSH  R4
  0x002B: D0000000  RET
  0x002C: C4040000  POP   R4
  0x002D: C4030000  POP   R3
  0x002E: C0600000  PUSH  R3
  0x002F: C0800000  PUSH  R4
  0x0030: C0600000  PUSH  R3
  0x0031: C0800000  PUSH  R4
  0x0032: D0000000  RET
  0x0033: C4030000  POP   R3
  0x0034: 84630000  LOAD  R3, 0(R3)
  0x0035: C0600000  PUSH  R3
  0x0036: D0000000  RET
  0x0037: C4040000  POP   R4
  0x0038: C4030000  POP   R3
  0x0039: 50642800  MOD   R5, R3, R4
  0x003A: 4C643800  DIV   R7, R3, R4
  0x003B: C0E00000  PUSH  R7
  0x003C: C0A00000  PUSH  R5
  0x003D: D0000000  RET
  0x003E: C4030000  POP   R3
  0x003F: 80630002  ADDI  R3, R3, 2
  0x0040: C0600000  PUSH  R3
  0x0041: D0000000  RET
  0x0042: C4030000  POP   R3
  0x0043: 8063FFFF  ADDI  R3, R3, -1
  0x0044: C0600000  PUSH  R3
  0x0045: D0000000  RET
  0x0046: C4030000  POP   R3
  0x0047: C4040000  POP   R4
  0x0048: D0000000  RET
  0x0049: C4030000  POP   R3
  0x004A: C4040000  POP   R4
  0x004B: 88640000  STORE R4, 0(R3)
  0x004C: D0000000  RET
  0x004D: C4030000  POP   R3
  0x004E: 80040000  ADDI  R4, R0, 0
  0x004F: 60641800  CMP   R3, R3, R4
  0x0050: C0600000  PUSH  R3
  0x0051: D0000000  RET
  0x0052: C4040000  POP   R4
  0x0053: C4030000  POP   R3
  0x0054: 60642800  CMP   R5, R3, R4
  0x0055: 80040001  ADDI  R4, R0, 1
  0x0056: 5CA41800  XOR   R3, R5, R4
  0x0057: C0600000  PUSH  R3
  0x0058: D0000000  RET
  0x0059: C4040000  POP   R4
  0x005A: C4030000  POP   R3
  0x005B: 44642800  SUB   R5, R3, R4
  0x005C: 8003001F  ADDI  R3, R0, 31
  0x005D: 68A32800  SHR   R5, R5, R3
  0x005E: C0A00000  PUSH  R5
  0x005F: D0000000  RET
  0x0060: C4040000  POP   R4
  0x0061: C4030000  POP   R3
  0x0062: C0800000  PUSH  R4
  0x0063: C0600000  PUSH  R3
  0x0064: CC000059  CALL  0x0000059
  0x0065: D0000000  RET
  0x0066: CC000060  CALL  0x0000060
  0x0067: CC00004D  CALL  0x000004D
  0x0068: D0000000  RET
  0x0069: CC000060  CALL  0x0000060
  0x006A: C4030000  POP   R3
  0x006B: 80040001  ADDI  R4, R0, 1
  0x006C: 5C641800  XOR   R3, R3, R4
  0x006D: C0600000  PUSH  R3
  0x006E: D0000000  RET
  0x006F: CC000059  CALL  0x0000059
  0x0070: CC00004D  CALL  0x000004D
  0x0071: D0000000  RET
  0x0072: C4030000  POP   R3
  0x0073: 80040000  ADDI  R4, R0, 0
  0x0074: 60642800  CMP   R5, R3, R4
  0x0075: 80040001  ADDI  R4, R0, 1
  0x0076: 5CA41800  XOR   R3, R5, R4
  0x0077: C0600000  PUSH  R3
  0x0078: D0000000  RET
  0x0079: 8003000A  ADDI  R3, R0, 10
  0x007A: C0600000  PUSH  R3
  0x007B: CC000001  CALL  0x0000001
  0x007C: D0000000  RET
  0x007D: C4030000  POP   R3
  0x007E: 84640000  LOAD  R4, 0(R3)
  0x007F: 80630001  ADDI  R3, R3, 1
  0x0080: 8C04000A  JZ    R4, 10
  0x0081: C0600000  PUSH  R3
  0x0082: C0800000  PUSH  R4
  0x0083: 84650000  LOAD  R5, 0(R3)
  0x0084: C0A00000  PUSH  R5
  0x0085: CC000001  CALL  0x0000001
  0x0086: C4040000  POP   R4
  0x0087: C4030000  POP   R3
  0x0088: 80630001  ADDI  R3, R3, 1
  0x0089: 8084FFFF  ADDI  R4, R4, -1
  0x008A: C8000080  JMP   0x0000080
  0x008B: D0000000  RET
  0x008C: 8003000A  ADDI  R3, R0, 10
  0x008D: C0600000  PUSH  R3
  0x008E: CC000001  CALL  0x0000001
  0x008F: D0000000  RET
  0x0090: 80030030  ADDI  R3, R0, 48
  0x0091: C0600000  PUSH  R3
  0x0092: C4040000  POP   R4
  0x0093: C4030000  POP   R3
  0x0094: 40641800  ADD   R3, R3, R4
  0x0095: C0600000  PUSH  R3
  0x0096: D0000000  RET
  0x0097: CC00000B  CALL  0x000000B
  0x0098: 8003000A  ADDI  R3, R0, 10
  0x0099: C0600000  PUSH  R3
  0x009A: CC000059  CALL  0x0000059
  0x009B: C4030000  POP   R3
  0x009C: 8C030003  JZ    R3, 3
  0x009D: CC000090  CALL  0x0000090
  0x009E: CC000001  CALL  0x0000001
  0x009F: C80000A7  JMP   0x00000A7
  0x00A0: 8003000A  ADDI  R3, R0, 10
  0x00A1: C0600000  PUSH  R3
  0x00A2: CC000037  CALL  0x0000037
  0x00A3: CC00000F  CALL  0x000000F
  0x00A4: CC000097  CALL  0x0000097
  0x00A5: CC000090  CALL  0x0000090
  0x00A6: CC000001  CALL  0x0000001
  0x00A7: D0000000  RET
  0x00A8: 80030000  ADDI  R3, R0, 0
  0x00A9: C0600000  PUSH  R3
  0x00AA: 94030000  LUI   R3, 0x0000
  0x00AB: 9863012E  ORI   R3, R3, 302
  0x00AC: C0600000  PUSH  R3
  0x00AD: CC000049  CALL  0x0000049
  0x00AE: 94030000  LUI   R3, 0x0000
  0x00AF: 9863012E  ORI   R3, R3, 302
  0x00B0: C0600000  PUSH  R3
  0x00B1: CC000033  CALL  0x0000033
  0x00B2: 94030000  LUI   R3, 0x0000
  0x00B3: 98630130  ORI   R3, R3, 304
  0x00B4: C0600000  PUSH  R3
  0x00B5: CC000033  CALL  0x0000033
  0x00B6: CC000059  CALL  0x0000059
  0x00B7: C4030000  POP   R3
  0x00B8: 8C03001B  JZ    R3, 27
  0x00B9: 94030000  LUI   R3, 0x0000
  0x00BA: 9863012E  ORI   R3, R3, 302
  0x00BB: C0600000  PUSH  R3
  0x00BC: CC000033  CALL  0x0000033
  0x00BD: CC000022  CALL  0x0000022
  0x00BE: 94030000  LUI   R3, 0x0000
  0x00BF: 98630131  ORI   R3, R3, 305
  0x00C0: C0600000  PUSH  R3
  0x00C1: 94030000  LUI   R3, 0x0000
  0x00C2: 9863012E  ORI   R3, R3, 302
  0x00C3: C0600000  PUSH  R3
  0x00C4: CC000033  CALL  0x0000033
  0x00C5: C4040000  POP   R4
  0x00C6: C4030000  POP   R3
  0x00C7: 40641800  ADD   R3, R3, R4
  0x00C8: C0600000  PUSH  R3
  0x00C9: CC000049  CALL  0x0000049
  0x00CA: 94030000  LUI   R3, 0x0000
  0x00CB: 9863012E  ORI   R3, R3, 302
  0x00CC: C0600000  PUSH  R3
  0x00CD: CC000033  CALL  0x0000033
  0x00CE: CC000022  CALL  0x0000022
  0x00CF: 94030000  LUI   R3, 0x0000
  0x00D0: 9863012E  ORI   R3, R3, 302
  0x00D1: C0600000  PUSH  R3
  0x00D2: CC000049  CALL  0x0000049
  0x00D3: C80000AE  JMP   0x00000AE
  0x00D4: D0000000  RET
  0x00D5: 80030000  ADDI  R3, R0, 0
  0x00D6: C0600000  PUSH  R3
  0x00D7: 94030000  LUI   R3, 0x0000
  0x00D8: 9863012F  ORI   R3, R3, 303
  0x00D9: C0600000  PUSH  R3
  0x00DA: CC000049  CALL  0x0000049
  0x00DB: 80030000  ADDI  R3, R0, 0
  0x00DC: C0600000  PUSH  R3
  0x00DD: 94030000  LUI   R3, 0x0000
  0x00DE: 9863012E  ORI   R3, R3, 302
  0x00DF: C0600000  PUSH  R3
  0x00E0: CC000049  CALL  0x0000049
  0x00E1: 94030000  LUI   R3, 0x0000
  0x00E2: 9863012E  ORI   R3, R3, 302
  0x00E3: C0600000  PUSH  R3
  0x00E4: CC000033  CALL  0x0000033
  0x00E5: 94030000  LUI   R3, 0x0000
  0x00E6: 98630130  ORI   R3, R3, 304
  0x00E7: C0600000  PUSH  R3
  0x00E8: CC000033  CALL  0x0000033
  0x00E9: CC000059  CALL  0x0000059
  0x00EA: C4030000  POP   R3
  0x00EB: 8C030022  JZ    R3, 34
  0x00EC: 94030000  LUI   R3, 0x0000
  0x00ED: 9863012F  ORI   R3, R3, 303
  0x00EE: C0600000  PUSH  R3
  0x00EF: CC000033  CALL  0x0000033
  0x00F0: 94030000  LUI   R3, 0x0000
  0x00F1: 98630131  ORI   R3, R3, 305
  0x00F2: C0600000  PUSH  R3
  0x00F3: 94030000  LUI   R3, 0x0000
  0x00F4: 9863012E  ORI   R3, R3, 302
  0x00F5: C0600000  PUSH  R3
  0x00F6: CC000033  CALL  0x0000033
  0x00F7: C4040000  POP   R4
  0x00F8: C4030000  POP   R3
  0x00F9: 40641800  ADD   R3, R3, R4
  0x00FA: C0600000  PUSH  R3
  0x00FB: CC000033  CALL  0x0000033
  0x00FC: C4040000  POP   R4
  0x00FD: C4030000  POP   R3
  0x00FE: 40641800  ADD   R3, R3, R4
  0x00FF: C0600000  PUSH  R3
  0x0100: 94030000  LUI   R3, 0x0000
  0x0101: 9863012F  ORI   R3, R3, 303
  0x0102: C0600000  PUSH  R3
  0x0103: CC000049  CALL  0x0000049
  0x0104: 94030000  LUI   R3, 0x0000
  0x0105: 9863012E  ORI   R3, R3, 302
  0x0106: C0600000  PUSH  R3
  0x0107: CC000033  CALL  0x0000033
  0x0108: CC000022  CALL  0x0000022
  0x0109: 94030000  LUI   R3, 0x0000
  0x010A: 9863012E  ORI   R3, R3, 302
  0x010B: C0600000  PUSH  R3
  0x010C: CC000049  CALL  0x0000049
  0x010D: C80000E1  JMP   0x00000E1
  0x010E: D0000000  RET
  0x010F: 80030040  ADDI  R3, R0, 64
  0x0110: C0600000  PUSH  R3
  0x0111: 94030000  LUI   R3, 0x0000
  0x0112: 98630130  ORI   R3, R3, 304
  0x0113: C0600000  PUSH  R3
  0x0114: CC000049  CALL  0x0000049
  0x0115: CC0000A8  CALL  0x00000A8
  0x0116: CC0000D5  CALL  0x00000D5
  0x0117: 94030000  LUI   R3, 0x0000
  0x0118: 98630171  ORI   R3, R3, 369
  0x0119: C0600000  PUSH  R3
  0x011A: CC00007D  CALL  0x000007D
  0x011B: 94030000  LUI   R3, 0x0000
  0x011C: 9863012F  ORI   R3, R3, 303
  0x011D: C0600000  PUSH  R3
  0x011E: CC000033  CALL  0x0000033
  0x011F: CC000097  CALL  0x0000097
  0x0120: CC00008C  CALL  0x000008C
  0x0121: CC0000D5  CALL  0x00000D5
  0x0122: 94030000  LUI   R3, 0x0000
  0x0123: 98630183  ORI   R3, R3, 387
  0x0124: C0600000  PUSH  R3
  0x0125: CC00007D  CALL  0x000007D
  0x0126: 94030000  LUI   R3, 0x0000
  0x0127: 9863012F  ORI   R3, R3, 303
  0x0128: C0600000  PUSH  R3
  0x0129: CC000033  CALL  0x0000033
  0x012A: CC000097  CALL  0x0000097
  0x012B: CC00008C  CALL  0x000008C
  0x012C: 04000000  HALT
  0x012D: 04000000  HALT

  ; Data section (size: 412 bytes)
  ; Data words (decimal):
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17, 83, 117, 109, 32, 40, 67, 111, 108, 100, 32, 67, 97, 99, 104, 101, 41, 58, 17, 83, 117, 109, 32, 40, 87, 97, 114, 109, 32, 67, 97, 99, 104, 101, 41, 58]
  ; Data words (hex):
  [0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000011, 0x00000053, 0x00000075, 0x0000006D, 0x00000020, 0x00000028, 0x00000043, 0x0000006F, 0x0000006C, 0x00000064, 0x00000020, 0x00000043, 0x00000061, 0x00000063, 0x00000068, 0x00000065, 0x00000029, 0x0000003A, 0x00000011, 0x00000053, 0x00000075, 0x0000006D, 0x00000020, 0x00000028, 0x00000057, 0x00000061, 0x00000072, 0x0000006D, 0x00000020, 0x00000043, 0x00000061, 0x00000063, 0x00000068, 0x00000065, 0x00000029, 0x0000003A]
out_stdout: |
  Successfully translated <source_path> to <target_path>
  Total instructions: 302, Data size: 412 bytes
  ============================================================
  Code size: 302 words. Data size: 103 words.

  Simulation output: 'Sum (Cold Cache):2080
  Sum (Warm Cache):2080
  '
  Total ticks: 417686
out_log: |-
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=170 imm=0x0000, ORI@idx=171 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=174 imm=0x0000, ORI@idx=175 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'ARRAY-SIZE-VAR': LUI@idx=178 imm=0x0000, ORI@idx=179 imm=0x0130 -> final_word_addr=0x00000130
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=185 imm=0x0000, ORI@idx=186 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'BIG-ARRAY': LUI@idx=190 imm=0x0000, ORI@idx=191 imm=0x0131 -> final_word_addr=0x00000131
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=193 imm=0x0000, ORI@idx=194 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=202 imm=0x0000, ORI@idx=203 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=207 imm=0x0000, ORI@idx=208 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'SUM_VAR': LUI@idx=215 imm=0x0000, ORI@idx=216 imm=0x012F -> final_word_addr=0x0000012F
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=221 imm=0x0000, ORI@idx=222 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=225 imm=0x0000, ORI@idx=226 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'ARRAY-SIZE-VAR': LUI@idx=229 imm=0x0000, ORI@idx=230 imm=0x0130 -> final_word_addr=0x00000130
  INFO     root:translator.py:857 Patched variable 'SUM_VAR': LUI@idx=236 imm=0x0000, ORI@idx=237 imm=0x012F -> final_word_addr=0x0000012F
  INFO     root:translator.py:857 Patched variable 'BIG-ARRAY': LUI@idx=240 imm=0x0000, ORI@idx=241 imm=0x0131 -> final_word_addr=0x00000131
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=243 imm=0x0000, ORI@idx=244 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'SUM_VAR': LUI@idx=256 imm=0x0000, ORI@idx=257 imm=0x012F -> final_word_addr=0x0000012F
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=260 imm=0x0000, ORI@idx=261 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'I_VAR': LUI@idx=265 imm=0x0000, ORI@idx=266 imm=0x012E -> final_word_addr=0x0000012E
  INFO     root:translator.py:857 Patched variable 'ARRAY-SIZE-VAR': LUI@idx=273 imm=0x0000, ORI@idx=274 imm=0x0130 -> final_word_addr=0x00000130
  INFO     root:translator.py:857 Patched variable 'SUM_VAR': LUI@idx=283 imm=0x0000, ORI@idx=284 imm=0x012F -> final_word_addr=0x0000012F
  INFO     root:translator.py:857 Patched variable 'SUM_VAR': LUI@idx=294 imm=0x0000, ORI@idx=295 imm=0x012F -> final_word_addr=0x0000012F
  INFO     root:translator.py:577 Patched string 'Sum (Cold Cache):': LUI@idx=279 imm=0x0000, ORI@idx=280 imm=0x0171 -> final_word_addr=0x00000171
  INFO     root:translator.py:577 Patched string 'Sum (Warm Cache):': LUI@idx=290 imm=0x0000, ORI@idx=291 imm=0x0183 -> final_word_addr=0x00000183
  INFO     root:machine.py:431 Starting simulation...
  INFO     root:machine.py:448 TICK:    0 | PC: 0x0000 | IR: 0x00000000 (NOP) | SP: 64536 | DSP: 60536 | MicroPC: 0 | Zero: False
  DEBUG    root:machine.py:291 TICK 1: Executing micro-op: LATCH_MAR_PC
  INFO     root:machine.py:448 TICK:    1 | PC: 0x0000 | IR: 0x00000000 (NOP) | SP: 64536 | DSP: 60536 | MicroPC: 1 | Zero: False
  DEBUG    root:machine.py:291 TICK 2: Executing micro-op: CACHE_READ
  WARNING  root:machine.py:61 CACHE: MISS on read at addr 0x0000. Accessing main memory.
  INFO     root:machine.py:448 TICK:    2 | PC: 0x0000 | IR: 0x00000000 (NOP) | SP: 64536 | DSP: 60536 | MicroPC: 2 | Zero: False
  INFO     root:machine.py:250 STALL: 8 cycles remaining.
  INFO     root:machine.py:448 TICK:    3 | PC: 0x0000 | IR: 0x00000000 (NOP) | SP: 64536 | DSP: 60536 | MicroPC: 2
  ... (log truncated)
